// lib/axios/userAxios.js
"use client";
import axios from "axios";

// üîó API base URL ‡¶®‡¶ø‡¶ö‡ßç‡¶õ‡ßá .env ‡¶•‡ßá‡¶ï‡ßá
const BASE_URL = process.env.NEXT_PUBLIC_API_URL;

const userAxios = axios.create({
  baseURL: BASE_URL,
});

// ‚úÖ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶∞‡¶ø‡¶ï‡ßã‡¶Ø‡¶º‡ßá‡¶∏‡ßç‡¶ü‡ßá‡¶∞ ‡¶Ü‡¶ó‡ßá user_token ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡ßá ‡¶®‡¶ø‡¶ö‡ßç‡¶õ‡ßá
userAxios.interceptors.request.use((config) => {
  if (typeof window !== "undefined") {
    const token = localStorage.getItem("user_token");
    if (token) {
      config.headers.Authorization = `Bearer ${token}`;
    }
  }

  return config;
});

// ‚ùå ‡¶Ø‡¶¶‡¶ø token expire ‡¶π‡¶Ø‡¶º ‡¶¨‡¶æ 401 error ‡¶Ü‡¶∏‡ßá ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶≤‡¶ó‡¶Ü‡¶â‡¶ü
userAxios.interceptors.response.use(
  (response) => response,
  (error) => {
    if (error.response?.status === 401) {
      // üîê token remove ‡¶ï‡¶∞‡ßá login page ‡¶è ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã
      localStorage.removeItem("user_token");
      localStorage.removeItem("user_info");

      if (typeof window !== "undefined") {
       // window.location.href = "/login";
      }
    }

    return Promise.reject(error);
  }
);

export default userAxios;
